[
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-collect",
    "comment": "WARNING! This pipe is generated from the template of the 'departments' datatype and changes will be silently ignored during collapse. For more information see the connectorpy README.",
    "exclude_completeness": [
      "{{@ system @}}-{{@ datatype @}}-share"
    ],
    "namespaced_identifiers": false,
    "source": {
      "operation": "list",
      "properties": {
        "datatype": "{{@ datatype @}}"
      },
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "transform": [
      {
        "properties": {
          "primary_key": "id",
          "share_dataset": "{{@ system @}}-{{@ datatype @}}-share"
        },
        "template": "transform-collect-rest",
        "type": "template"
      },
      {
        "rules": {
          "default": [
            [
              "copy",
              "*"
            ],
            [
              "add",
              "$last-modified",
              [
                "datetime-parse",
                "%Y-%m-%dT%H:%M:%S%Z",
                "_S.LastChangedDateTimeOffset"
              ]
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share",
    "add_namespaces": false,
    "batch_size": 1,
    "comment": "WARNING! This pipe is generated from the template of the 'departments' datatype and changes will be silently ignored during collapse. For more information see the connectorpy README.",
    "compaction": {
      "keep_versions": 100
    },
    "exclude_completeness": [
      "{{@ system @}}-{{@ datatype @}}-share"
    ],
    "namespaced_identifiers": false,
    "sink": {
      "deletion_tracking": false,
      "set_initial_offset": "onload"
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform",
      "type": "dataset"
    },
    "transform": {
      "properties": {
        "operation_insert_properties": {
          "datatype": "{{@ datatype @}}"
        },
        "operation_lookup_properties": {
          "datatype": "{{@ datatype @}}"
        },
        "operation_update_properties": {
          "datatype": "{{@ datatype @}}"
        },
        "primary_key": "Id",
        "rest_system": "{{@ system @}}",
        "rewrite_rules_lookup": {
          "rewrite_lookup": [
            [
              "add",
              "response_body",
              [
                "map-dict",
                [
                  "coalesce",
                  "_.",
                  [
                    "replace",
                    [
                      "substring",
                      0,
                      1,
                      "_."
                    ],
                    [
                      "upper",
                      [
                        "substring",
                        0,
                        1,
                        "_."
                      ]
                    ],
                    "_."
                  ]
                ],
                [
                  "coalesce",
                  "_."
                ],
                "_S.response_body"
              ]
            ]
          ]
        },
        "rewrite_rules_payload": {
          "alter_payload": [
            [
              "comment",
              "*** Added this custom rule to ensure that we create the payload needed for POv2***"
            ],
            [
              "merge",
              [
                "dict",
                "op",
                "replace",
                "path",
                [
                  "concat",
                  "/",
                  [
                    "first",
                    "_S."
                  ]
                ],
                "value",
                [
                  "last",
                  "_S."
                ]
              ]
            ]
          ],
          "remove_non_payload_properties": [
            [
              "copy",
              "*",
              [
                "list",
                "_*",
                "$based_on_properties",
                "$based_on",
                "Id"
              ]
            ]
          ],
          "rewrite_update_payload": [
            [
              "add",
              "$payload",
              [
                "apply",
                "alter_payload",
                [
                  "items",
                  [
                    "apply",
                    "remove_non_payload_properties",
                    "_S.$source"
                  ]
                ]
              ]
            ]
          ]
        },
        "share_dataset": "{{@ system @}}-{{@ datatype @}}-share",
        "trace": true,
        "trace-update": true
      },
      "template": "[{\n            \"type\": \"dtl\",\n            \"rules\": {\n              \"default\": [\n                [\"copy\", [\"literal\", {{ primary_key | tojson }} ]],\n                [\"add\", \"$source\", \"_S.\"],\n                [\"copy\", \"$origin\"],\n                [\"copy\", \"$replaced\"],\n                {% if is_natural_key is defined and is_natural_key %}\n                [\"if\",\n                  [\"any\",\n                    [\"is-null\", \"_.\"],\n                    [\"map\",\n                      [\"path\", \"_.\", \"_S.\"],\n                      [\"literal\", {{ primary_key | tojson }}]\n                    ]\n                  ],\n                  [\"merge\",\n                    [\"apply\", \"discard-partial-natural-key\", \"_S.\"]\n                  ],\n                {% endif %}\n                [\"if\",\n                  [\"and\",\n                    [\"eq\", \"_S.$replaced\", true],\n                    [\"eq\", \"_S._deleted\", true]\n                  ],\n                  [\"merge\",\n                    [\"apply\", \"discard-replaced\", \"_S.\"]\n                  ],\n                  [\"if\",\n                    [\"has-key\", \"$discard\", \"_S.\"],\n                    [\"merge\",\n                      [\"apply\", \"discard-by-connector\", \"_S.\"]\n                    ],\n                    [\"if\",\n                      [\"all\",\n                        [\"is-not-null\", \"_.\"],\n                        [\"map\",\n                          [\"path\", \"_.\", \"_S.\"],\n                          [\"literal\", {{ primary_key | tojson }} ]\n                        ]\n                      ],\n                      [\"if\",\n                        [\"eq\", \"_S._deleted\", true],\n                        [\n                          [\"comment\", \"Entity is deleted and it does have a system specific id.\"],\n                          [\"merge\",\n                            [\"apply\", \"delete\", \"_S.\"]\n                          ]\n                        ],\n                        [\n                          {% if is_natural_key is defined and is_natural_key %}\n                          [\"comment\", \"Entity is not deleted and it does have a system specific id and it has a natural key.\"],\n                          [\"if\", [\"is-not-null\", \"_S.$based_on\"],\n                            [\"merge\",\n                              [\"apply\", \"lookup\", \"_S.\"]\n                            ],\n                            [\"merge\",\n                              [\"apply\", \"insert\", \"_S.\"]\n                            ]\n                          ]\n                          {% else %}\n                          [\"comment\", \"Entity is not deleted and it does have a system specific id.\"],\n                          [\"merge\",\n                            [\"apply\", \"lookup\", \"_S.\"]\n                          ]\n                          {% endif %}\n                        ]\n                      ],\n                      [\"if\",\n                        [\"eq\", \"_S._deleted\", true],\n                        [\"merge\",\n                          [\"apply\", \"discard-delete-non-existent\", \"_S.\"]\n                        ],\n                        [\n                          [\"comment\", \"At this point there is no primary key, so we should do an insert unless there are sink entity ids in $ids with $generated_id in them.\"],\n                          [\"if\",\n                            [\"is-not-empty\",\n                              [\"filter\",\n                                [\"is-not-null\", \"_.\"],\n                                [\"hops\", {\n                                  \"datasets\": [\"{{ share_dataset }} st\"],\n                                  \"where\": [\n                                    [\"eq\", \"_S.$ids\",\n                                      [\"ni\", \"st._id\"]\n                                    ]\n                                  ],\n                                  \"return\": \"st.$generated_id\",\n                                  \"track-dependencies\": false\n                                }]\n                              ]\n                            ],\n                            [\"merge\",\n                              [\"apply\", \"discard-already-inserted\", \"_S.\"]\n                            ],\n                            [\n                              [\"comment\", \"Entity is not deleted, it does not have a system specific id and it does not exist in sink dataset.\"],\n                              [\"merge\",\n                                [\"apply\", \"insert\", \"_S.\"]\n                              ]\n                            ]\n                          ]\n                        ]\n                      ]\n                    ]\n                  ]\n                ]\n                {% if is_natural_key is defined and is_natural_key %}\n                ]\n                {% endif %}\n              ],\n              \"delete\": [\n                {% if enable_deletes is defined and enable_deletes is true %}\n                  [\"add\", \"$operation\", \"delete\"]\n                {% else %}\n                  [\"add\", \"$operation\", \"discard-deletes-not-enabled\"]\n                {% endif %}\n              ],\n              \"discard-partial-natural-key\": [\n                [\"add\", \"$operation\", \"discard-partial-natural-key\"]\n              ],\n              \"discard-already-inserted\": [\n                [\"add\", \"$operation\", \"discard-already-inserted\"]\n              ],\n              \"discard-delete-non-existent\": [\n                [\"add\", \"$operation\", \"discard-delete-non-existent\"]\n              ],\n              \"discard-replaced\": [\n                [\"add\", \"$operation\", \"discard-replaced\"]\n              ],\n              \"discard-by-connector\": [\n                [\"add\", \"$operation\", \"discard-by-connector\"],\n                [\"add\", \"$reason\", \"_S.$discard\"]\n              ],\n              \"insert\": [\n                [\"add\", \"$operation\", \"insert\"],\n                {% if rewrite_rules_payload is defined and rewrite_rules_payload is mapping and rewrite_rules_payload['rewrite_insert_payload'] is defined %}\n                [\"add\", \"_payload\",\n                 [\"path\", \"$payload\", [\"apply\", \"rewrite_insert_payload\", \"_S.\"]]\n                ],\n                {% else %}\n                [\"add\", \"_payload\",\n                  [\"if\", [\"is-not-null\", \"_R._T.$source.$payload\"],\n                   \"_R._T.$source.$payload\",\n                   [\"apply\", \"payload\", \"_R._T.$source\"]\n                  ]\n                ],\n                {% endif %}\n                [\"add\", \"{{ payload_property if payload_property is defined else 'payload' }}\",\n                  \"_T._payload\"\n                ]\n              ],\n              \"lookup\": [\n                [\"add\", \"$operation\", \"lookup\"]\n              ],\n              \"payload\": [\n                [\"merge\",\n                  [\"dict\",\n                    [\"filter\",\n                      [\"not\",\n                        [\"or\",\n                          [\"matches\", \"_*\",\n                            [\"first\", \"_.\"]\n                          ],\n                          [\"matches\", \"$*\",\n                            [\"first\", \"_.\"]\n                          ]\n                        ]\n                      ],\n                      [\"items\", \"_S.\"]\n                    ]\n                  ]\n                ]\n              ]\n            }\n          }, {\n            \"type\": \"rest\",\n            \"system\": \"{{ rest_system }}\",\n            \"allowed_status_codes\": \"{{ lookup_allowed_status_codes if lookup_allowed_status_codes is defined else '100-599' }}\",\n            \"operation\": \"{{ operation_lookup if operation_lookup is defined else 'lookup' }}\",\n        {% if operation_lookup_properties is defined %}\n            \"properties\": {{ operation_lookup_properties | tojson }},\n        {% endif %}\n            \"replace_entity\": false,\n            \"response_property\": \"response_body\",\n            \"response_status_property\": \"response_status\",\n            \"side_effects\": false,\n            \"trigger_on\": {\n              \"key\": \"$operation\",\n              \"value\": \"lookup\"\n            }\n          },\n          {% if rewrite_rules_lookup is defined and rewrite_rules_lookup is mapping and rewrite_rules_lookup['rewrite_lookup'] is defined %}\n          {\n            \"type\": \"dtl\",\n            \"rules\": {\n              {% for rule_id, rule_body in rewrite_rules_lookup | dictsort %}\n              {{ rule_id | tojson }}: {{ rule_body | tojson }},\n              {% endfor %}\n              \"default\": [\n                  [\"copy\", \"*\"],\n                  [\"if\",\n                   [\"eq\", \"_S.$operation\", \"lookup\"],\n                   [\"merge\", [\"apply\", \"rewrite_lookup\", \"_S.\"]]\n                  ]\n              ]\n            }\n          },\n          {% endif %}\n          {\n            \"type\": \"dtl\",\n            \"rules\": {\n                {% if rules is defined and rules is mapping %}\n                {% for rule_id, rule_body in rules | dictsort %}\n                {{ rule_id | tojson }}: {{ rule_body | tojson }},\n                {% endfor %}\n                {% endif %}\n                {% if rewrite_rules_payload is defined and rewrite_rules_payload is mapping %}\n                {% for rule_id, rule_body in rewrite_rules_payload | dictsort %}\n                {{ rule_id | tojson }}: {{ rule_body | tojson }},\n                {% endfor %}\n                {% endif %}\n              \"default\": [\n                [\"if\",\n                  [\"neq\", \"_S.$operation\", \"lookup\"],\n                  [\n                    [\"if\",\n                      [\"eq\", \"_S.$operation\", \"insert\"],\n                      [\"if\",\n                        [\"is-null\", \"_S.$origin\"],\n                        [\"fail!\", \"Entity to be inserted does not have $origin property\"]\n                      ]\n                    ],\n                    [\"copy\", \"*\"]\n                  ],\n                  [\n                    [\"if\",\n                      [\"neq\", \"_S.response_status\", 200],\n                      [\"copy\", \"*\"],\n                      [\n                        [\"add\", \"$comparison\",\n                          [\"apply\", \"based-on-comparison\", \"_S.\"]\n                        ],\n                        [\"case-eq\",\n                          [\"path\", \"$result\", \"_T.$comparison\"], \"modified-in-system\",\n                          [\"merge\",\n                            [\"apply\", \"discard-modified-in-system\", \"_S.\"]\n                          ], \"entity-not-changed\",\n                          [\"merge\",\n                            [\"apply\", \"discard-entity-not-changed\", \"_S.\"]\n                          ],\n                          [\"merge\",\n                            [\"apply\", \"update\", \"_S.\"]\n                          ]\n                        ],\n                        [\"copy\", \"$source\"],\n                        [\"copy\", [\"literal\", {{ primary_key | tojson }} ]],\n                        [\"copy\", \"$origin\"],\n                        [\"copy\", \"$replaced\"],\n                        [\"add\", \"$trace_lookup\", [\"apply\", \"trace\", \"_S.\"]]\n                      ]\n                    ]\n                  ]\n                ]\n              ],\n              \"trace\": [\n                [\"copy\", \"*\", [\"list\", \"$trace_*\", \"$source\"]]\n              ],\n              \"based-on-comparison\": [\n                [\"comment\", \"If looked up entity is different from $based_on then noop. If looked up entity is same as _S then noop - otherwise perform update\"],\n                [\"merge\",\n                  [\"apply\", \"based-on-source\", \"_S.\"]\n                ],\n                [\"merge\",\n                  [\"apply\", \"based-on-lookup\", \"_S.\"]\n                ],\n                [\"merge\",\n                  [\"apply\", \"based-on-update\", \"_S.\"]\n                ],\n                [\"if\",\n                  [\"neq\", \"_T.$based_on_lookup\", \"_T.$based_on_source\"],\n                  [\"add\", \"$result\", \"modified-in-system\"],\n                  [\"if\",\n                    [\"neq\", \"_T.$based_on_update\", \"_T.$based_on_source\"],\n                    [\"add\", \"$result\", \"needs-update\"],\n                    [\"add\", \"$result\", \"entity-not-changed\"]\n                  ]\n                ]\n              ],\n              \"remove-unmapped-properties\": [\n                [\"comment\", \"function that builds up the dotted key and checks if one of dotted notations in _based_on_properties starts with this dotted key, recurses if the value is a dict\"],\n                [\"merge\",\n                  [\"dict\",\n                    [\"map\",\n                      [\"if\",\n                        [\"or\",\n                          [\"and\",\n                            [\"is-dict\",\n                              [\"last\", \"_.\"]\n                            ],\n                            [\"gt\",[\"count\",\n                              [\"apply\", \"remove-unmapped-properties\",\n                                [\"dict\", \"data\",\n                                  [\"last\", \"_.\"], \"prefix\",\n                                  [\"concat\", \"_S.prefix\",\n                                    [\"ni-id\",\n                                      [\"ni\",\n                                        [\"first\", \"_.\"]\n                                      ]\n                                    ], \".\"]\n                                ]\n                              ]\n                            ],0]\n                          ],\n                          [\"and\",\n                            [\"not\",\n                              [\"is-dict\",\n                                [\"last\", \"_.\"]\n                              ]\n                            ],\n                            [\"and\",\n                              [\"is-not-empty\",\n                                [\"last\", \"_.\"]\n                              ],\n                              [\"neq\",\n                                [\"last\", \"_.\"], \"\"]\n                            ]\n                          ]\n                        ],\n                        [\"list\",\n                          [\"if\",\n                            [\"is-not-empty\",\n                              [\"apply\", \"is-match\",\n                                [\"dict\", \"pattern\",\n                                  [\"concat\", \"_S.prefix\",\n                                    [\"ni-id\",\n                                      [\"ni\",\n                                        [\"first\", \"_.\"]\n                                      ]\n                                    ], \"*\"]\n                                ]\n                              ]\n                            ],\n                            [\"ni-id\",\n                              [\"ni\",\n                                [\"first\", \"_.\"]\n                              ]\n                            ]\n                          ],\n                          [\"if\",\n                            [\"is-dict\",\n                              [\"last\", \"_.\"]\n                            ],\n                            [\"apply\", \"remove-unmapped-properties\",\n                              [\"dict\", \"data\",\n                                [\"last\", \"_.\"], \"prefix\",\n                                [\"concat\", \"_S.prefix\",\n                                  [\"ni-id\",\n                                    [\"ni\",\n                                      [\"first\", \"_.\"]\n                                    ]\n                                  ], \".\"]\n                              ]\n                            ],\n                            [\"last\", \"_.\"]\n                          ]\n                        ]\n                      ],\n                      [\"items\", \"_S.data\"]\n                    ]\n                  ]\n                ]\n              ],\n              \"is-match\": [\n                [\"comment\", \"workaround for shadowing the outer _. variable\"],\n                [\"discard\",\n                 [\"is-not-empty\",\n                  [\"filter\",\n                   [\"matches\", \"_S.pattern\", \"_.\"], \"_R._S.$source.$based_on_properties\"]\n                 ]\n                ]\n              ],\n              \"based-on-source\": [\n                [\"add\", \"$based_on_source\", \"_S.$source.$based_on\"]\n              ],\n              \"based-on-lookup\": [\n                [\"add\", \"$based_on_lookup\",\n                 [\"apply\", \"remove-unmapped-properties\",\n                  [\"dict\", \"prefix\", \"\", \"data\",\n                   {% if rules is defined and rules is mapping and rules['lookup_rewrite'] is defined %}\n                     [\"first\", [\"apply\", \"lookup_rewrite\", \"_S.response_body\"]]\n                   {% else %}\n                     [\"first\", \"_S.response_body\"]\n                   {% endif %}\n                  ]\n                 ]\n                ]\n              ],\n              \"based-on-update\": [\n                [\"add\", \"$based_on_update\",\n                 [\"apply\", \"remove-unmapped-properties\",\n                  [\"dict\", \"prefix\", \"\", \"data\", \"_S.$source\"]\n                 ]\n                ]\n              ],\n              \"discard-entity-not-changed\": [\n                [\"add\", \"$operation\", \"discard-entity-not-changed\"]\n              ],\n              \"discard-modified-in-system\": [\n                [\"add\", \"$operation\", \"discard-modified-in-system\"]\n              ],\n              \"payload\": [\n                [\"merge\",\n                  [\"dict\",\n                    [\"filter\",\n                      [\"not\",\n                        [\"or\",\n                          [\"matches\", \"_*\",\n                            [\"first\", \"_.\"]\n                          ],\n                          [\"matches\", \"$*\",\n                            [\"first\", \"_.\"]\n                          ]\n                        ]\n                      ],\n                      [\"items\", \"_S.\"]\n                    ]\n                  ]\n                ]\n              ],\n              \"update\": [\n                  [\"add\", \"$operation\", \"update\"],\n                  {% if rewrite_rules_payload is defined and rewrite_rules_payload is mapping and rewrite_rules_payload['rewrite_update_payload'] is defined %}\n                  [\"add\", \"_payload\",\n                   [\"path\", \"$payload\", [\"apply\", \"rewrite_update_payload\", \"_S.\"]]\n                  ],\n                  {% else %}\n                  [\"add\", \"_payload\",\n                   [\"if\", [\"is-not-null\", \"_S.$source.$payload\"],\n                    \"_S.$source.$payload\",\n                    [\"apply\", \"payload\", \"_S.$source\"]\n                   ]\n                  ],\n                  {% endif %}\n                  [\"add\", \"_lookup\",\n                   {% if rules is defined and rules is mapping and rules['lookup_rewrite'] is defined %}\n                   [\"first\", [\"apply\", \"lookup_rewrite\", \"_S.response_body\"]]\n                   {% else %}\n                   [\"first\", \"_S.response_body\"]\n                   {% endif %}\n                  ],\n                  {% if client_side_patching is defined and client_side_patching is true %}\n                  [\"add\", \"_payload\",\n                   [\"apply\", \"recursive-merge\",\n                    [\"dict\", \"a\", \"_T._lookup\", \"b\", \"_T._payload\"]\n                   ]\n                  ],\n                  {% endif %}\n                  [\"add\", \"{{ payload_property if payload_property is defined else 'payload' }}\",\n                   \"_T._payload\"\n                  ]\n              ],\n              \"recursive-merge\": [\n                [\"merge\",\n                  [\"dict\",\n                    [\"map\",\n                      [\"list\", \"_.\",\n                        [\"sorted\",\n                          [\"if\",\n                            [\"and\",\n                              [\"is-dict\",\n                                [\"path\", \"_.\", \"_S.a\"]\n                              ],\n                              [\"is-dict\",\n                                [\"path\", \"_.\", \"_S.b\"]\n                              ]\n                            ],\n                            [\"apply\", \"recursive-merge\",\n                              [\"dict\", \"a\",\n                                [\"path\", \"_.\", \"_S.a\"], \"b\",\n                                [\"path\", \"_.\", \"_S.b\"]\n                              ]\n                            ],\n                            [\"if\",\n                              [\"has-key\", \"_.\", \"_S.b\"],\n                              [\"path\", \"_.\", \"_S.b\"],\n                              [\"path\", \"_.\", \"_S.a\"]\n                            ]\n                          ]\n                        ]\n                      ],\n                      [\"distinct\",\n                        [\"combine\",\n                          [\"keys\", \"_S.a\"],\n                          [\"keys\", \"_S.b\"]\n                        ]\n                      ]\n                    ]\n                  ]\n                ]\n              ]\n            }\n          }, {\n            \"type\": \"rest\",\n            \"system\": \"{{ rest_system }}\",\n            \"allowed_status_codes\": \"{{ update_allowed_status_codes if update_allowed_status_codes is defined else '100-599' }}\",\n            \"operation\": \"{{ operation_update if operation_update is defined else 'update' }}\",\n        {% if operation_update_properties is defined %}\n            \"properties\": {{ operation_update_properties | tojson }},\n        {% endif %}\n            \"replace_entity\": false,\n            \"response_property\": \"response_body\",\n            \"response_status_property\": \"response_status\",\n            \"side_effects\": true,\n            \"trigger_on\": {\n              \"key\": \"$operation\",\n              \"value\": \"update\"\n            }\n          }, {\n            \"type\": \"rest\",\n            \"system\": \"{{ rest_system }}\",\n            \"allowed_status_codes\": \"{{ insert_allowed_status_codes if insert_allowed_status_codes is defined else '100-599' }}\",\n            \"operation\": \"{{ operation_insert if operation_insert is defined else 'insert' }}\",\n        {% if operation_insert_properties is defined %}\n            \"properties\": {{ operation_insert_properties | tojson }},\n        {% endif %}\n            \"replace_entity\": false,\n            \"response_property\": \"response_body\",\n            \"response_status_property\": \"response_status\",\n            \"side_effects\": true,\n            \"trigger_on\": {\n              \"key\": \"$operation\",\n              \"value\": \"insert\"\n            }\n          }, {\n            \"type\": \"rest\",\n            \"system\": \"{{ rest_system }}\",\n            \"allowed_status_codes\": \"{{ delete_allowed_status_codes if delete_allowed_status_codes is defined else '100-599' }}\",\n            \"operation\": \"{{ operation_delete if operation_delete is defined else 'delete' }}\",\n        {% if operation_delete_properties is defined %}\n            \"properties\": {{ operation_delete_properties | tojson }},\n        {% endif %}\n            \"replace_entity\": false,\n            \"response_property\": \"response_body\",\n            \"response_status_property\": \"response_status\",\n            \"side_effects\": true,\n            \"trigger_on\": {\n              \"key\": \"$operation\",\n              \"value\": \"delete\"\n            }\n          },\n          {% if rewrite_rules_mutation is defined and rewrite_rules_mutation is mapping %}\n            {% if rewrite_rules_mutation['rewrite_update'] is defined or rewrite_rules_mutation['rewrite_insert'] is defined or rewrite_rules_mutation['rewrite_delete'] is defined %}\n          {\n            \"type\": \"dtl\",\n            \"rules\": {\n              {% for rule_id, rule_body in rewrite_rules_mutation | dictsort %}\n              {{ rule_id | tojson }}: {{ rule_body | tojson }},\n              {% endfor %}\n              \"default\": [\n                  [\"copy\", \"*\"]\n                  {% if rewrite_rules_mutation['rewrite_update'] is defined %}\n                  ,\n                  [\"if\",\n                   [\"eq\", \"_S.$operation\", \"update\"],\n                   [\"merge\", [\"apply\", \"rewrite_update\", \"_S.\"]]\n                  ]\n                  {% endif %}\n                  {% if rewrite_rules_mutation['rewrite_insert'] is defined %}\n                  ,\n                  [\"if\",\n                   [\"eq\", \"_S.$operation\", \"insert\"],\n                   [\"merge\", [\"apply\", \"rewrite_insert\", \"_S.\"]]\n                  ]\n                  {% endif %}\n                  {% if rewrite_rules_mutation['rewrite_delete'] is defined %}\n                  ,\n                  [\"if\",\n                   [\"eq\", \"_S.$operation\", \"delete\"],\n                   [\"merge\", [\"apply\", \"rewrite_delete\", \"_S.\"]]\n                  ]\n                  {% endif %}\n              ]\n            }\n          },\n            {% endif %}\n          {% endif %}\n          {\n            \"type\": \"dtl\",\n            \"rules\": {\n              \"default\": [\n                [\"copy\", [\"literal\", {{ primary_key | tojson }} ]],\n                [\"copy\", \"$source\"],\n                [\"copy\", \"$origin\"],\n                [\"copy\", \"$replaced\"],\n                [\"copy\", \"$trace_*\"],\n                [\"add\", \"$last_operation\", \"_S.$operation\"],\n                [\"add\", [\"concat\", \"$trace_\", \"_S.$operation\"], [\"apply\", \"trace\", \"_S.\"]],\n                [\"comment\", \"Check lookup operation\"],\n                [\"if\",\n                 [\"and\",\n                  [\"eq\", \"_S.$operation\", \"lookup\"],\n                  [\"not\", [\"in\", \"_S.response_status\", [\"list\", 200]]]],\n                 [\"add\", \"$error\", \"error-lookup\"]\n                ],\n                [\"comment\", \"Check insert operation\"],\n                [\"if\",\n                  [\"eq\", \"_S.$operation\", \"insert\"],\n                  [\"if\",\n                    [\"not\", [\"in\", \"_S.response_status\", [\"list\", 200, 201]]],\n                    [\"add\", \"$error\", \"error-insert\"],\n                    [\n                    {% if primary_key is not string and primary_key is iterable %}\n                        {% if is_natural_key is defined and is_natural_key %}\n                        [\"add\", \"$generated_id\",\n                         [\"map\", [\"path\", \"_.\", \"_S.\"], [\"literal\", {{ primary_key | tojson }} ]]\n                        ],\n                        {% else %}\n                        [\"add\", \"$generated_id\",\n                         {% if primary_key_insert is defined %}\n                         [\"map\", [\"path\", \"_.\", \"_S.response_body\"], [\"literal\", {{ primary_key_insert | tojson }} ]]\n                         {% else %}\n                         [\"map\", [\"path\", \"_.\", \"_S.response_body\"], [\"literal\", {{ primary_key | tojson }} ]]\n                         {% endif %}\n                        ],\n                        {% endif %}\n                     {% else %}\n                        {% if is_natural_key is defined and is_natural_key %}\n                        [\"add\", \"$generated_id\", \"_S.{{ primary_key }}\"],\n                        {% else %}\n                        [\"add\", \"$generated_id\",\n                         {% if primary_key_insert is defined %}\n                         [\"first\", \"_S.response_body.{{ primary_key_insert }}\"]\n                         {% else %}\n                         [\"first\", \"_S.response_body.{{ primary_key }}\"]\n                         {% endif %}\n                        ],\n                        {% endif %}\n                    {% endif %}\n                      [\"if\",\n                        [\"is-null\", \"_T.$generated_id\"],\n                        [\"fail!\", \"Generated primary key not found\"]\n                      ]\n                    ]\n                  ]\n                ],\n                [\"comment\", \"Check update operation\"],\n                [\"if\",\n                  [\"and\",\n                    [\"eq\", \"_S.$operation\", \"update\"],\n                    [\"not\", [\"in\", \"_S.response_status\", [\"list\", 200, 201, 204]]]],\n                  [\"add\", \"$error\", \"error-update\"]\n                ],\n                [\"comment\", \"Check delete operation\"],\n                [\"if\",\n                  [\"and\",\n                    [\"eq\", \"_S.$operation\", \"delete\"],\n                    [\"not\", [\"in\", \"_S.response_status\", [\"list\", 200, 204]]]],\n                  [\"add\", \"$error\", \"error-delete\"]\n                ],\n                [\"add\", \"_previous\",\n                  [\"apply\", \"previous\",\n                    [\"first\",\n                     [\"hops\", {\n                         \"datasets\": [\"{{ share_dataset }} st\"],\n                         \"where\": [\n                             [\"eq\", \"_S._id\", \"st._id\"]\n                         ],\n                         \"track-dependencies\": false\n                     }]\n                    ]\n                  ]\n                ],\n                [\"if\",\n                  [\"and\",\n                    [\"is-null\", \"_T.$generated_id\"],\n                    [\"is-not-null\", \"_T._previous.$generated_id\"]\n                  ],\n                  [\"add\", \"$generated_id\", \"_T._previous.$generated_id\"]\n                ],\n                [\"add-if\", \"$previous_success\", \"_T._previous.$success\"],\n                [\"if\",\n                 [\"is-not-null\", \"_T.$error\"],\n                 [\"add\", \"$success\", false],\n                 [\"if\", [\"matches\", \"discard-\", \"_S.$operation\"],\n                  [\"add-if\", \"$success\", \"_T.$previous_success\"],\n                  [\"add\", \"$success\", true]]\n                ],\n                [\"comment\", \"IS-15016: Never write deleted entities to the share sink dataset\"],\n                [\"if\",\n                  [\"eq\", \"_S._deleted\", true],\n                  [\"add\", \"$deleted\", true]],\n                [\"add\", \"_deleted\", false],\n                [\"if\",\n                  [\"eq\", \"_S.$replaced\", true],\n                  [\"add-if\", \"$origin\", \"_T._previous.$origin\"]\n                ]\n              ],\n              \"previous\": [\n                [\"copy\", \"$generated_id\"],\n                [\"copy\", \"$origin\"],\n                [\"copy\", \"$success\"]\n              ],\n              \"trace\": [\n                [\"copy\", \"*\", [\"list\", \"$trace_*\", \"$source\"]]\n              ]\n            }\n          }]\nsesam:markjson",
      "type": "template"
    },
    "type": "pipe"
  }
]