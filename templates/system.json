[
  {
    "_id": "{{@ system @}}",
    "headers": {
      "Ocp-Apim-Subscription-Key": "$SECRET(subscription_key)"
    },
    "oauth2": {
      "client_id": "$SECRET(application_key)",
      "client_secret": "$SECRET(api_key)",
      "extra": {
        "headers": {
          "Ocp-Apim-Subscription-Key": "$SECRET(subscription_key)"
        }
      },
      "token_url": "{{@ base_url @}}/OAuth/Token"
    },
    "operations": {
      "delete": {
        "method": "DELETE",
        "payload_property": "data",
        "url": "{{ properties.datatype }}/{{ entity.Id }}"
      },
      "insert": {
        "id_expression": "{{ Id }}",
        "method": "POST",
        "payload-type": "json",
        "url": "{{ properties.datatype }}"
      },
      "list": {
        "id_expression": "{{ Id }}",
        "method": "GET",
        "next_page_link": "{{@ base_url @}}/v2/{{ properties.datatype }}",
        "next_page_termination_strategy": [
          "empty-result",
          "not-full-page"
        ],
        "page_size": 5000,
        "params": {
          "pageNumber": "{{ page + 1 }}",
          "pageSize": "{{ page_size }}",
          "useDatabaseValidation": false
        },
        "since_property_name": "lastChangedDateTimeOffsetGreaterThan",
        "updated_expression": "{{ LastChangedDateTimeOffset }}",
        "url": "{{ properties.datatype }}"
      },
      "lookup": {
        "method": "GET",
        "url": "{{ properties.datatype }}/{{ entity.Id }}"
      },
      "lookup-customer": {
        "method": "GET",
        "url": "customers/{{ entity.CustomerId }}"
      },
      "outgoinginvoiceslines_list": {
        "method": "GET",
        "url": "{{ properties.datatype }}/{{ entity.Id }}/lines"
      },
      "salesorderlines_insert": {
        "method": "POST",
        "url": "{{ properties.datatype }}/{{ entity['$source']['sesam_SalesOrderId'] }}/lines"
      },
      "salesorderlines_lookup": {
        "method": "GET",
        "url": "{{ properties.datatype }}/{{ entity['$source']['sesam_SalesOrderId'] }}/lines/{{ entity.Id }}"
      },
      "salesorderlines_update": {
        "method": "PATCH",
        "url": "{{ properties.datatype }}/{{ entity['$source']['sesam_SalesOrderId'] }}/lines/{{ entity.Id }}"
      },
      "salesorders_insert": {
        "method": "POST",
        "url": "{{ properties.datatype }}/complete"
      },
      "salesorders_lookup": {
        "method": "GET",
        "url": "{{ properties.datatype }}/{{ entity.Id }}/complete"
      },
      "update": {
        "method": "PATCH",
        "payload-type": "json",
        "url": "{{ properties.datatype }}/{{ entity.Id }}"
      },
      "vatcode-list": {
        "id_expression": "{{ Id }}",
        "method": "GET",
        "next_page_link": "{{@ base_url @}}/v2/{{ properties.datatype }}",
        "next_page_termination_strategy": [
          "empty-result",
          "not-full-page"
        ],
        "page_size": 5000,
        "params": {
          "pageNumber": "{{ page + 1 }}",
          "pageSize": "{{ page_size }}",
          "useDatabaseValidation": false
        },
        "url": "{{ properties.datatype }}"
      }
    },
    "type": "system:rest",
    "url_pattern": "{{@ base_url @}}/v2/%s",
    "verify_ssl": true
  },
  {
    "_id": "{{@ system @}}v1",
    "oauth2": {
      "client_id": "$SECRET(application_key)",
      "client_secret": "$SECRET(api_key)",
      "token_url": "{{@ base_url_v1 @}}/OAuth/Token"
    },
    "operations": {
      "alternate_list": {
        "method": "GET",
        "params": {
          "$filter": "{% if since is defined and since is not none %}(LastChanged ge datetimeoffset'{{ since }}'){% else %}(LastChanged ge datetimeoffset'1970-01-01'){% endif %}"
        },
        "url": "{{ properties.datatype }}"
      },
      "contact_insert": {
        "method": "POST",
        "payload-type": "json",
        "payload_property": "data",
        "url": "{{ properties.parenttype }}/{{ entity['$source']['partyId'] }}/{{ properties.datatype }}"
      },
      "contact_lookup": {
        "method": "GET",
        "payload_property": "data",
        "url": "{{ properties.parenttype }}/{{ entity['$source']['partyId'] }}/{{ properties.datatype }}/{{ entity.id }}"
      },
      "delete": {
        "method": "DELETE",
        "payload_property": "data",
        "url": "{{ properties.datatype }}/{{ entity.id }}"
      },
      "insert": {
        "method": "POST",
        "payload-type": "json",
        "payload_property": "data",
        "url": "{{ properties.datatype }}"
      },
      "list": {
        "headers": {
          "X-Sesam-Page": "{% if (previous_request_headers is defined and previous_request_headers['X-Sesam-Page'] is defined) %}{{ previous_request_headers['X-Sesam-Page']|int + 1 }}{% else %}1{% endif %}"
        },
        "method": "GET",
        "next_page_link": "{{@ base_url_v1 @}}/{{ properties.datatype }}",
        "next_page_termination_strategy": [
          "same-next-page-request",
          "empty-result"
        ],
        "params": {
          "$filter": "{% if since is defined and since is not none %}(LastChanged ge datetimeoffset'{{ since }}'){% else %}(LastChanged ge datetimeoffset'1970-01-01'){% endif %}",
          "$orderby": "{{ properties.ordering }}",
          "$skip": "{% if (previous_request_headers['X-Sesam-Page'] is defined) %}{{ properties.top|int*(headers['X-Sesam-Page']|int-1) }}{% else %}0{% endif %}sesam:markjson",
          "$top": "{{ properties.top }}"
        },
        "url": "{{ properties.datatype }}"
      },
      "lookup": {
        "method": "GET",
        "payload_property": "data",
        "url": "{{ properties.datatype }}/{{ entity.id }}"
      },
      "lookup-product": {
        "method": "GET",
        "payload_property": "data",
        "url": "product/{{ entity.ProductId }}"
      },
      "quote_list": {
        "method": "GET",
        "url": "{{ properties.datatype }}/List"
      },
      "update": {
        "method": "POST",
        "payload-type": "json",
        "payload_property": "data",
        "url": "{{ properties.datatype }}"
      },
      "vat_list": {
        "method": "GET",
        "url": "{{ properties.datatype }}"
      }
    },
    "type": "system:rest",
    "url_pattern": "{{@ base_url_v1 @}}/%s",
    "verify_ssl": true
  }
]