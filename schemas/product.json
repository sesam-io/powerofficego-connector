{
  "$id": "/api/pipes/xxxxxx-product-collect/entity-types/sink",
  "$schema": "http://json-schema.org/schema#",
  "additionalProperties": true,
  "properties": {
    "availableStock": {
      "type": "number",
      "description": "Gets the number of products available. This is the GoApi.Products.Product.ProductsOnHand reduced by the amount of products added to order lines that is yet to be billed."
    },
    "createdFromImportJournalId": {
      "type": "string (GUID)",
      "description": "Gets the identifier of the Import that created this product."
    },
    "gtin": {
      "type": "string",
      "description": "Gets or sets the GTIN (Global trade item number)."
    },
    "productsOnHand": {
      "type": "number",
      "description": "Gets or sets the number of products on hand (total currently in stock)."
    },
    "productsOnHandLastChanged": {
      "type": "string (date)",
      "description": "Gets the last products on hand changed date."
    },
    "code": {
      "type": "string",
      "description": "Gets or sets the code. This code is an unique identification of the product."
    },
    "costPrice": {
      "type": "integer",
      "description": "Gets or sets the cost price of the product."
    },
    "description": {
      "type": "string",
      "description": "Gets or sets the description."
    },
    "id": {
      "type": "integer",
      "description": "Gets the identifier. This identifier is unique and assigned by PowerOffice Go when a new entity is saved, and should be provided when an entity should be edited. If this identifier is not provided, PowerOffice Go will try to create a new entity."
    },
    "isActive": {
      "type": "boolean",
      "description": "Gets or sets a value indicating whether this product is active."
    },
    "lastChanged": {
      "type": "string (date)",
      "description": "Gets the last changed date."
    },
    "name": {
      "type": "string",
      "description": "Gets or sets the name of the product."
    },
    "productGroupId": {
      "type": "integer",
      "description": "Gets or sets the identifier of the ProductGroup that this product belongs in."
    },
    "salesAccount": {
      "type": "integer",
      "description": "Gets or sets the code of the GeneralLedgerAccount that is used as sales account when invoicing this product."
    },
    "salesPrice": {
      "type": "integer",
      "description": "Gets or sets the sales price of the product exclusive Value Added Tax (VAT)."
    },
    "type": {
      "type": "integer",
      "description": "Gets or sets the type of the product. Products can either be a GoApi.Products.ProductType.Product or a GoApi.Products.ProductType.Service"
    },
    "unit": {
      "type": "string",
      "description": "OBSOLETE - Gets or sets the Oasis compatible unit-of-measure code. This property is marked obsolete. Use GoApi.Products.Product.UnitOfMeasureCode instead when creating or updating a product."
    },
    "unitOfMeasureCode": {
      "type": "integer",
      "description": "Gets or sets the unit of measure ( UnitOfMeasureCode ). This is an Oasis compatible unit-of-measure code. If the unit of measure was saved using GoApi.Products.Product.Unit , and the value is not compatible with this enum, this property will be NULL and the original unit string will be present in GoApi.Products.Product.Unit ."
    },
    "vatCode": {
      "type": "string",
      "description": "Gets the code of the VatCode used when billing the product. If not present, get the from the product group this product is in."
    },
    "vatExemptSalesAccount": {
      "type": "integer",
      "description": "Gets or sets the code of the GeneralLedgerAccount that will be used for posting the revenue from the product when the invoice is sent if the customer is exempt VAT (Value added tax), or the invoice line on the invoice with the product has ExemptVat set to true. The alternative sales account will be used for posting the revenue from the product when the invoice is sent if the customer is exempt vat, or the line has ExemptVat set to true. The usual application in Go is that the alternative sales account is used for vat free sales with code 5. The alternative sales account can, however, be used with an account with vat in order to alternate between different vat codes on the product. ///"
    }
  },
  "title": "Pipe sink entity type: xxxxxx-product-collect",
  "type": "object"
}