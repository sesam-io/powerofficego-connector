{
  "$id": "/api/pipes/xxxxxx-outgoinginvoice-collect/entity-types/sink",
  "$schema": "http://json-schema.org/schema#",
  "additionalProperties": true,
  "properties": {
    "$last-modified": {
      "subtype": "nanoseconds",
      "type": "string"
    },
    "balance": {
      "anyOf": [
        {
          "description": "Gets the remaining amount to be paid on this invoice. This field will only have a value on sent or paid invoices and is shown in the client's default currency code.",
          "subtype": "decimal",
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "brandingThemeCode": {
      "description": "Gets or sets the code of the branding theme to be used when sending this invoice.",
      "type": "string"
    },
    "cid": {
      "description": "Gets the cid. This field will only have a value on sent invoices. (Norwegian: KID)",
      "type": "string"
    },
    "contactGroup": {
      "description": "The contact group name. Will be returned from PowerOffice Go if GoApi.Invoices.OutgoingInvoice.ContactGroupId is set",
      "type": "string"
    },
    "contactGroupId": {
      "description": "The contact group Id. Is set if the invoice is a group invoice. Set this to a valid ContactGroup identifier if the invoice is a group invoice. It is not possible to set GoApi.Invoices.OutgoingInvoice.CustomerCode and ContactGroupId on the same invoice.",
      "type": "number"
    },
    "contractNo": {
      "description": "Gets or sets the contract no.",
      "type": "string"
    },
    "createdDate": {
      "description": "Gets the date this entity was created.",
      "type": "string (date)"
    },
    "currencyCode": {
      "description": "Gets or sets the currency code of the outgoing invoice.",
      "type": "string"
    },
    "currencyExchangeRate": {
      "description": "Gets or sets an normalized (always base 1) currency exchange rate.",
      "type": "integer"
    },
    "customMatchingReference": {
      "description": "Gets or sets the custom matching reference. This value will be matched with the sub ledger entries on vouchers with same CustomMatchingReference after posting.",
      "type": "string"
    },
    "customerCode": {
      "description": "Gets or sets the code of the Customer that this invoice should be delivered to. It is not possible to set GoApi.Invoices.OutgoingInvoice.ContactGroupId and CustomerCode on the same invoice.",
      "type": "integer"
    },
    "customerEmail": {
      "description": "Gets the customer email address. On sent invoices this field will contain the email the invoice was delivered to if the delivery type was GoApi.Common.InvoiceDeliveryType.PdfByEmail .",
      "type": "string"
    },
    "customerReference": {
      "description": "Gets or sets the customer reference.",
      "type": "string"
    },
    "customerReferenceContactPersonId": {
      "description": "Gets or sets the customer reference contact person id. This property will be used instead of CustomerReference if provided. The customer must have a contact person with this ID created to use this property.",
      "type": "integer"
    },
    "debtCollectionCaseStatus": {
      "description": "Gets the external DebtCollectionCase status associated with this invoice.",
      "type": "number"
    },
    "debtCollectionCode": {
      "description": "Gets the external DebtCollectionCase code.",
      "type": "string"
    },
    "deliveryAddress1": {
      "description": "Gets the delivery address' Address1 that was set on the invoice when it was sent. Will only have a value on invoices with GoApi.Invoices.OutgoingInvoiceStatus.Sent , GoApi.Invoices.OutgoingInvoiceStatus.Paid and GoApi.Invoices.OutgoingInvoiceStatus.Archived .",
      "type": "string"
    },
    "deliveryAddress2": {
      "description": "Gets the delivery address Address2 that was set on the invoice when it was sent. Will only have a value on invoices with GoApi.Invoices.OutgoingInvoiceStatus.Sent , GoApi.Invoices.OutgoingInvoiceStatus.Paid and GoApi.Invoices.OutgoingInvoiceStatus.Archived .",
      "type": "string"
    },
    "deliveryAddressCity": {
      "description": "Gets the delivery address City that was set on the invoice when it was sent. Will only have a value on invoices with GoApi.Invoices.OutgoingInvoiceStatus.Sent , GoApi.Invoices.OutgoingInvoiceStatus.Paid and GoApi.Invoices.OutgoingInvoiceStatus.Archived .",
      "type": "string"
    },
    "deliveryAddressCountryCode": {
      "description": "Gets the delivery address CountryCode that was set on the invoice when it was sent. Will only have a value on invoices with GoApi.Invoices.OutgoingInvoiceStatus.Sent , GoApi.Invoices.OutgoingInvoiceStatus.Paid and GoApi.Invoices.OutgoingInvoiceStatus.Archived .",
      "type": "string"
    },
    "deliveryAddressId": {
      "description": "Gets or sets the delivery address identifier.",
      "type": "integer"
    },
    "deliveryAddressZipCode": {
      "description": "Gets the delivery address ZipCode that was set on the invoice when it was sent. Will only have a value on invoices with GoApi.Invoices.OutgoingInvoiceStatus.Sent , GoApi.Invoices.OutgoingInvoiceStatus.Paid and GoApi.Invoices.OutgoingInvoiceStatus.Archived .",
      "type": "string"
    },
    "deliveryDate": {
      "description": "Gets or sets the delivery date.",
      "type": "string (date)"
    },
    "deliveryTerm": {
      "description": "Gets or set the terms of delivery of the invoice.",
      "type": "string"
    },
    "departmentCode": {
      "description": "Gets or sets code of the Department this invoice is for. This code will be inherited on all OutgoingInvoiceLines unless '-1' (no department) is specified.",
      "type": "string"
    },
    "dim1Code": {
      "description": "Gets the code of the CustomDimensionValue 1 this invoice is for.",
      "type": "string"
    },
    "dim2Code": {
      "description": "Gets the code of the CustomDimensionValue 2 this invoice is for.",
      "type": "string"
    },
    "dim3Code": {
      "description": "Gets the code of the CustomDimensionValue 3 this invoice is for.",
      "type": "string"
    },
    "documentNo": {
      "description": "Gets the document no (invoice number). This field will only have a value on sent invoices.",
      "type": "string"
    },
    "dueDate": {
      "description": "Gets the due date. This is the due date on the invoice that was sent from PowerOffice Go and will only have a value on sent invoices.",
      "type": "string (date)"
    },
    "expectedDueDate": {
      "description": "Gets the expected due date. This is the date when the invoice is expected to be paid by a customer. In essence this is an override of GoApi.Invoices.OutgoingInvoice.DueDate , that is set by a user in PowerOffice Go after the invoice has been delivered. This field will only have a value on sent invoices.",
      "type": "string (date)"
    },
    "externalImportReference": {
      "description": "Gets or sets an external import reference. Can be used to correlate/duplicate check invoices. Must be a unique value for a given client, exception will be thrown if an OutgoingInvoice with equal import reference exists. Max length is 50 characters.",
      "type": "string"
    },
    "id": {
      "description": "Gets the identifier. This identifier is unique and assigned by PowerOffice Go when a new entity is saved, and should be provided when an entity should be edited. If this identifier is not provided, PowerOffice Go will try to create a new entity.",
      "type": "string (GUID)"
    },
    "importedOrderNo": {
      "description": "Gets or sets the imported order no. This should be set as the order number in the external system.",
      "type": "string"
    },
    "invoiceDebtCollectionStatus": {
      "description": "Gets the internal debt collection status associated with this invoice.",
      "type": "integer"
    },
    "invoiceDeliveryType": {
      "description": "Gets the type of the invoice delivery. This is the means of delivery that was used when the invoice was delivered by PowerOffice Go.",
      "type": "integer"
    },
    "invoiceNo": {
      "description": "Gets the invoice number in number format. Available only for sent and posted invoices.",
      "type": "integer"
    },
    "isInvoiceBeingProcessed": {
      "description": "Get current delivery invoice status. When true the invoice is under delivery.",
      "type": "boolean"
    },
    "lastChanged": {
      "description": "Gets the last changed date.",
      "type": "string (date)"
    },
    "lastErrorMessage": {
      "description": "If invoice delivery fails this property will contain the last error message.",
      "type": "string"
    },
    "locationCode": {
      "description": "Gets the code of the Location this invoice is for.",
      "type": "string"
    },
    "netAmount": {
      "description": "Gets the net amount of the invoice. This is calculated from the GoApi.Invoices.OutgoingInvoice.OutgoingInvoiceLines .",
      "type": "integer"
    },
    "orderDate": {
      "description": "Gets or sets the order date.",
      "type": "string (date)"
    },
    "orderNo": {
      "description": "Gets the order no. This value is auto generated when saving a new OutgoingInvoice.",
      "type": "integer"
    },
    "ourReferenceEmployeeCode": {
      "description": "Gets or sets code of the Employee that is the sales person on this outgoing invoice.",
      "type": "integer"
    },
    "outgoingInvoiceLines": {
      "additionalProperties": true,
      "description": "Gets the outgoing invoice lines ( OutgoingInvoiceLine . Trying to add more then 10000 lines to an OutgoingInvoice will throw an exception when saving.",
      "properties": {
        "Accrual": {
          "additionalProperties": true,
          "description": "Gets or sets if GoApi.Invoices.OutgoingInvoiceLine.Accrual is used to enable accrual of the invoice. (Norwegian: Periodisering)",
          "properties": {
            "BalanceAccountCode": {
              "description": "The code of the GeneralLedgerAccount used for keeping accrual balance. (Norwegian: Balansekonto)",
              "type": "number"
            },
            "FromDate": {
              "description": "Start date of accrual. If the invoice is a RecurringInvoice , NumOfMonths should be used instead.",
              "type": "string (date)"
            },
            "IsActive": {
              "description": "States if accrual is active or not.",
              "type": "boolean"
            },
            "NumOfMonths": {
              "description": "Used by recurring invoice to specify the number of months the invoice should be accrued over. This property will only be used if the accrual is on a line that is on a RecurringInvoice",
              "type": "number"
            },
            "ResultAccountCode": {
              "description": "The code of the GeneralLedgerAccount used for posting the result. (Norwegian: Resultatkonto)",
              "type": "number"
            },
            "ToDate": {
              "description": "End date of accrual. If the invoice is a RecurringInvoice , NumOfMonths should be used instead.",
              "type": "string (date)"
            }
          },
          "type": "object"
        },
        "ExternalImportLineReference": {
          "description": "Gets or sets an external import line reference. Can be used to correlate/duplicate check invoice lines. Must be a unique value for a given client, exception will be thrown if an OutgoingInvoiceLine with equal import reference exists for the same invoice. Max length is 50 characters.",
          "type": "string"
        },
        "IsDeleted": {
          "description": "Flag indicating if a line should be deleted from the invoice when calling the save method. This property should be used when deleting lines.",
          "type": "boolean"
        },
        "LocationCode": {
          "description": "Gets the code of the Location this line is for.",
          "type": "string"
        },
        "departmentCode": {
          "description": "Gets or sets code of the Department this line is for. By default the DepartmentCode in the head (OutgoingInvoice) will be inherited and used when this is null. Use '-1' to set 'No department'.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "discountPercent": {
          "anyOf": [
            {
              "description": "Gets or sets the discount. The value must be between 0 and 1. I.e. 0.5 = 50% discount. Can also be used to add a premium in percent of the sales price (usually markup) by having negative number. Negative numbers can be between -10 and 0.",
              "subtype": "decimal",
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        },
        "exemptVat": {
          "type": "boolean"
        },
        "id": {
          "description": "Gets the identifier. This identifier is unique and assigned by PowerOffice Go when a new entity is saved, and should be provided when an entity should be edited. If this identifier is not provided, PowerOffice Go will try to create a new entity. Important notice: When the OutgoingInvoice status goes from Draft or Approved to a posted invoice (status Sent, Paid or Archived). The draft invoice is copied over to a posted invoice, causing the Id to change.",
          "type": "integer"
        },
        "lineType": {
          "description": "Gets or sets the type of the line. When adding invoice lines to the OutgoingInvoice , the types supported are GoApi.Common.VoucherLineType.Normal , GoApi.Common.VoucherLineType.Summary and GoApi.Common.VoucherLineType.Text .",
          "type": "integer"
        },
        "netAmount": {
          "description": "Gets the net amount. This is calculated by PowerOffice Go using the quantity, product price (or overridden unit price) and discount, not including value added tax (VAT).",
          "type": "integer"
        },
        "productCode": {
          "description": "Gets or sets the code of the Product . Must be provided on lines that affects the result (lines that are of GoApi.Common.VoucherLineType.Normal ).",
          "type": "string"
        },
        "projectCode": {
          "description": "Gets or sets the code of the Project this line is for. By default the ProjectCode in the head (OutgoingInvoice) will be inherited and used when this is null. Use '-1' to set 'No project'.",
          "type": "string"
        },
        "quantity": {
          "description": "Gets or sets the quantity.",
          "type": "integer"
        },
        "salesAccount": {
          "description": "Gets the code of the GeneralLedgerAccount that will be used for posting the revenue from the product when the invoice is sent if the customer is exempt VAT, or the line has ExemptVat set to true. The usual application in Go is that the alternative sales account is used for vat free sales with code 5. The alternative sales account can, however, be used with an account with vat in order to alternate between different vat codes on the product. This applies to all outgoing invoices with OutgoingInvoiceStatus GoApi.Invoices.OutgoingInvoiceStatus.Draft or GoApi.Invoices.OutgoingInvoiceStatus.Approved . Lines on invoices that are posted (has OutgoingInvoiceStatus GoApi.Invoices.OutgoingInvoiceStatus.Sent or GoApi.Invoices.OutgoingInvoiceStatus.Paid .), this property will contain the actual account that was used to post the revenue.",
          "type": "integer"
        },
        "salesPersonEmployeeCode": {
          "description": "Gets or sets code of the Employee that is the sales person on this line.",
          "type": "integer"
        },
        "sortOrder": {
          "description": "Gets or sets the sort order. Can be used to specify the order of the lines on the invoice.",
          "type": "integer"
        },
        "totalAmount": {
          "anyOf": [
            {
              "description": "Gets the total amount. This is calculated by PowerOffice Go using the quantity, product price (or overridden unit price) and discount, including value added tax (VAT).",
              "subtype": "decimal",
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        },
        "unitCost": {
          "description": "Gets or sets the overridden unit cost price for this Product . If this is not provided, the unit cost price on the product will be set.",
          "type": "integer"
        },
        "unitOfMeasure": {
          "description": "OBSOLETE - Gets or sets the unit of measure. This is an Oasis compatible unit-of-measure code. This property is deprecated. Use GoApi.Invoices.OutgoingInvoiceLine.UnitOfMeasureCode . If both GoApi.Invoices.OutgoingInvoiceLine.UnitOfMeasure and GoApi.Invoices.OutgoingInvoiceLine.UnitOfMeasureCode is set, GoApi.Invoices.OutgoingInvoiceLine.UnitOfMeasureCode will be used.",
          "type": "string"
        },
        "unitOfMeasureCode": {
          "description": "Gets or sets the unit of measure. This is an Oasis compatible unit-of-measure code.",
          "type": "integer"
        },
        "unitPrice": {
          "description": "Gets or sets the overridden unit price for this Product before discount. If this is not provided, the unit price on the product will be set.",
          "type": "integer"
        },
        "vatCode": {
          "description": "Gets the code of the VatCode . (Norwegian: MVA-kode)",
          "type": "string"
        },
        "vatExemptSalesAccount": {
          "description": "Gets the code of the GeneralLedgerAccount that will be used for posting the revenue from the product when the invoice is sent if the customer is exempt VAT. This applies to all outgoing invoices with OutgoingInvoiceStatus GoApi.Invoices.OutgoingInvoiceStatus.Draft or GoApi.Invoices.OutgoingInvoiceStatus.Approved . Lines on invoices that are posted (has OutgoingInvoiceStatus GoApi.Invoices.OutgoingInvoiceStatus.Sent or GoApi.Invoices.OutgoingInvoiceStatus.Paid .), this property will contain the actual account that was used to post the revenue.",
          "type": "integer"
        },
        "vatRate": {
          "anyOf": [
            {
              "description": "Gets the rate of the VatCode .",
              "subtype": "decimal",
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        },
        "vatReturnSpecification": {
          "description": "Gets or sets the VatReturnSpecification . Entries that are vat reportable might report vat return specifications from 2022. If not provided, the line will use the vat returns specification that is default on the account of the product if there is any, otherwise GoApi.Common.VatReturnSpecification.None .",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "paymentTerms": {
      "description": "Gets or sets the payment terms. This is the number of days until the invoice is due after sending.",
      "type": "integer"
    },
    "projectCode": {
      "description": "Gets or sets the code of the Project this invoice is for. This code will be inherited on all OutgoingInvoiceLines unless '-1' (no project) is specified.",
      "type": "string"
    },
    "purchaseOrderNo": {
      "description": "Gets or sets the purchase order no.",
      "type": "string"
    },
    "relatedDocumentNo": {
      "description": "Gets or sets the related DocumentNo linking the original invoice. Can be used when creating credit notes. If set on a credit note, this credit note will be matched with an invoice with the provided InvoiceNo / DocumentNo when the credit note is posted.",
      "type": "string"
    },
    "sentDate": {
      "description": "Gets the date the invoice was sent in Go. Only available for invoices sent from Go. Blank if the invoice was posted to Go using an import of the voucher.",
      "type": "string (date)"
    },
    "status": {
      "description": "Gets or sets the status. Invoices can only be set to status GoApi.Invoices.OutgoingInvoiceStatus.Draft or GoApi.Invoices.OutgoingInvoiceStatus.Approved . Defaults to GoApi.Invoices.OutgoingInvoiceStatus.Draft .",
      "type": "integer"
    },
    "totalAmount": {
      "anyOf": [
        {
          "description": "Gets the total amount of the invoice. This is calculated from the GoApi.Invoices.OutgoingInvoice.OutgoingInvoiceLines",
          "subtype": "decimal",
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "voucherDate": {
      "description": "Gets the voucher date. This is the date when the invoice was sent from PowerOffice Go and will only have a value on sent invoices.",
      "type": "string (date)"
    },
    "voucherNo": {
      "description": "Gets the voucher number the invoice have. Only avaialble for sent invoices.",
      "type": "integer"
    }
  },
  "title": "Pipe sink entity type: xxxxxx-outgoinginvoice-collect",
  "type": "object"
}